// pcappp.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <tins/tins.h>
#include <chrono>

using namespace std;
using namespace Tins;
int main()
{
    vector<NetworkInterface> interfaces = NetworkInterface::all();

    // Now iterate them
    /*for (const NetworkInterface& iface : interfaces) {
        // First print the name (GUID)
        cout << "Interface name: " << iface.name();

        // Now print the friendly name, a wstring that will contain something like 
        // "Local Area Connection 2"
        wcout << " (" << iface.friendly_name() << ")" << endl;
    }*/
    
    NetworkInterface defaulti = NetworkInterface::default_interface();
    SnifferConfiguration config;
    config.set_promisc_mode(true);
    Sniffer sniffer(defaulti.name(), config);
    PacketWriter writer("test4.pcap", DataLinkType<EthernetII>());
    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    for (auto& packet : sniffer) {
        writer.write(packet);
        if (std::chrono::steady_clock::now() - start > std::chrono::seconds(11)) {
            break;
        }
    }
        
    //PDU* some_pdu = sniffer.next_packet();
    //writer.write(some_pdu);


}

