#include "procmon/Procmon.cpp"
#include "regshot/RegShot.h"
#include <cstdlib>

int main(int iArgCnt, char** argv)
{
	// init variables
	Procmon procmon(R"(procmon.out)");
	vector <pair<HKEY, wstring>> keys = {
		{ HKEY_CURRENT_USER, L"HKEY_CURRENT_USER"}, 
		{ HKEY_CLASSES_ROOT,L"HKEY_CLASSES_ROOT" },
		{ HKEY_LOCAL_MACHINE,L"HKEY_LOCAL_MACHINE" },
		{ HKEY_USERS ,L"HKEY_USERS" },
		{ HKEY_CURRENT_CONFIG, L"HKEY_CURRENT_CONFIG"}
	};
	RegShot* r = new RegShot(keys);

	// start tasks
	cout << "Registry snapshot before running malware" << endl;
	r->takeSnapShot("regshot_before");

	system("netsh trace start traceFile=log.etl capture=yes");
	cout << "Network capture started" << endl;;

	procmon.start();

	cout << "Analysis started" << endl;;

	// the program to run
	system("start cmd.exe");

	// waiting time
	Sleep(5000);
	
	// cleanups
	cout << "Analysis stopped" << endl;;
	procmon.stop();

	system("netsh trace stop");
	cout << "Network capture stopped" << endl;;

	// This step can be done in analysis part only, no need to do here
	// system("etl2pcapng.exe log.etl log.pcapng");

	cout << "Registry snapshot after running malware" << endl;;
	r->takeSnapShot("regshot_after");
	delete r;
	return 0;
}