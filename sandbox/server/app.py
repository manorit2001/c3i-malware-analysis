import configparser
import subprocess
from pathlib import Path

from flask import Flask, request
from werkzeug.utils import secure_filename

app = Flask(__name__)


def shutdown_server():
    func = request.environ.get("werkzeug.server.shutdown")
    if func is None:
        raise RuntimeError("Not running with the Werkzeug Server")
    func()


@app.route("/upload", methods=["POST"])
def upload_file():
    config = configparser.ConfigParser()
    config.read("config.ini")

    upload_dir = Path("upload").absolute().resolve()
    name = request.form.get("name")

    f = request.files["file"]
    if name == str(None) or name == None:
        name = secure_filename(f.filename)
    else:
        name = secure_filename(name)

    upload_dir.mkdir(parents=True, exist_ok=True)

    f.save(upload_dir / name)
    shutdown_server()
    subprocess.Popen(
        ["python3", config["default"]["script"], str(upload_dir / name)],
        close_fds=False,
    )
    return "file uploaded successfully"


if __name__ == "__main__":
    app.run(debug=True)
